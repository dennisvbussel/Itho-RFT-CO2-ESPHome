substitutions:
  devicename: ithofan
  upper_devicename: "Itho Fan"

esphome:
  name: ${devicename}
  platform: ESP8266
  board: nodemcuv2
  includes:
    - ithofanComponent/
  libraries:
    - EspSoftwareSerial
    - SPI

custom_component:
- id: fan
  lambda: |-
    auto fan = new IthoFan(5, 0x1C, 0x957D19, 0x9568C4);
    return {fan};

switch:
  - platform: template
    name: "${upper_devicename} auto"
    id: switch_auto
    icon: mdi:molecule-co2
    turn_on_action:
      - lambda: fanPtr->setStatus(FanStatus::automatic);
  - platform: template
    name: "${upper_devicename} night"
    id: switch_night
    icon: mdi:weather-night
    turn_on_action:
      - lambda: fanPtr->setStatus(FanStatus::night);
  - platform: template
    name: "${upper_devicename} low"
    id: switch_low
    icon: mdi:fan-speed-1
    turn_on_action:
      - lambda: fanPtr->setStatus(FanStatus::low);
  - platform: template
    name: "${upper_devicename} medium"
    id: switch_medium
    icon: mdi:fan-speed-2
    turn_on_action:
      - lambda: fanPtr->setStatus(FanStatus::medium);
  - platform: template
    name: "${upper_devicename} high"
    id: switch_high
    icon: mdi:fan-speed-3
    turn_on_action:
      - lambda: fanPtr->setStatus(FanStatus::high);

number:
  - platform: template
    name: "${upper_devicename} timer"
    id: timer_number
    icon: mdi:av-timer
    min_value: 0
    max_value: 255
    step: 1
    set_action:
      - lambda: fanPtr->setTimer(x);


# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret api_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${upper_devicename} Hotspot"
    password: !secret ap_password

captive_portal:
